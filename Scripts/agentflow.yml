# Example Configuration
name: SuperAgent007
type: agent|compositeAgent|library
version: 1.0
Description: "This is a super agent that processes data in a complex way."
inputs:
    - name: input1
      connecto: AgentA.input1
    - name: AgentA.input2
    
imports:
  - file: "other_agents.yml"
    alias: "other"
  - file: "planning.yml"
    alias: "planner"

agents:
  - name: AgentA
    description: "This is Agent A, responsible for processing input data and producing output."
    inputs:
      - name: input1
        formats: ["format1", "format2"]
      - name: input2
        formats: ["format3"]
    outputs:
      - name: output1
        formats: ["format1"]
      - name: output2
        formats: ["format2"]
    source:
      python: "agent_a.py"
      xlang: "agent_a.x"
      shared_lib: "libagent_a.so"

    parameters:
      param1: "value1"
      param2: "value2"
    group: Group1

  - name: AgentB
    description: "This is Agent B, which receives data from Agent A and processes it further."
    inputs:
      - name: input1
        formats: ["format1"]
      - name: input2
        formats: ["format2"]
    outputs:
      - name: output1
        formats: ["format3"]
    source:
      python: "agent_b.py"
      xlang: "agent_b.x"
      shared_lib: "libagent_b.so"
    parameters:
      param1: "value1"
      param2: "value2"
    group: Group2

  - name: AgentC
    description: "This is Agent C, the final agent in the processing chain."
    inputs:
      - name: input1
        formats: ["format3"]
    outputs:
      - name: output1
        formats: ["format4"]
    source:
      python: "agent_c.py"
      xlang: "agent_c.x"
      shared_lib: "libagent_c.so"
    parameters:
      param1: "value1"
      param2: "value2"
    group: Group1

connections:
  - fromAgentName: AgentA
    fromPinName: output1
    toAgentName: AgentB
    toPinName: input1
  - fromAgentName: AgentB
    fromPinName: output1
    toAgentName: AgentC
    toPinName: input1
  - fromAgentName: other.AgentX
    fromPinName: output1
    toAgentName: AgentA
    toPinName: input2
  - fromAgentName: planner.AgentY
    fromPinName: input1
    toAgentName: AgentB
    toPinName: input2

# Schema Definition
type: object
properties:
  imports:
    type: array
    items:
      type: object
      properties:
        file:
          type: string
        alias:
          type: string
  agents:
    type: array
    items:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        inputs:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              formats:
                type: array
                items:
                  type: string
        outputs:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              formats:
                type: array
                items:
                  type: string
        source:
          type: object
          properties:
            python:
              type: string
            xlang:
              type: string
            shared_lib:
              type: string
        parameters:
          type: object
          additionalProperties:
            type: string
        group:
          type: string
  connections:
    type: array
    items:
      type: object
      properties:
        fromAgentName:
          type: string
        fromPinName:
          type: string
        toAgentName:
          type: string
        toPinName:
          type: string
required:
  - agents
  - connections

